(()=>{"use strict";const t="keeper-webauthn-message";const e="undefined"==typeof atob?t=>Buffer.from(t,"base64").toString("binary"):atob,n="undefined"==typeof btoa?t=>Buffer.from(t,"binary").toString("base64"):btoa;function r(t){return function(t,e=!1){for(var n=t.length,r=new Uint8Array(e?4*n:n),a=0,i=0;a<n;a++){var o=t.charCodeAt(a);if(e&&55296<=o&&o<=56319){if(++a>=n)throw new Error("Malformed string, low surrogate expected at position "+a);o=(55296^o)<<10|65536|56320^t.charCodeAt(a)}else if(!e&&o>>>8)throw new Error("Wide characters are not allowed.");!e||o<=127?r[i++]=o:o<=2047?(r[i++]=192|o>>6,r[i++]=128|63&o):o<=65535?(r[i++]=224|o>>12,r[i++]=128|o>>6&63,r[i++]=128|63&o):(r[i++]=240|o>>18,r[i++]=128|o>>12&63,r[i++]=128|o>>6&63,r[i++]=128|63&o)}return r.subarray(0,i)}(e(t))}function a(t){return n(function(t,e=!1){for(var n=t.length,r=new Array(n),a=0,i=0;a<n;a++){var o=t[a];if(!e||o<128)r[i++]=o;else if(o>=192&&o<224&&a+1<n)r[i++]=(31&o)<<6|63&t[++a];else if(o>=224&&o<240&&a+2<n)r[i++]=(15&o)<<12|(63&t[++a])<<6|63&t[++a];else{if(!(o>=240&&o<248&&a+3<n))throw new Error("Malformed UTF8 character at byte offset "+a);var s=(7&o)<<18|(63&t[++a])<<12|(63&t[++a])<<6|63&t[++a];s<=65535?r[i++]=s:(s^=65536,r[i++]=55296|s>>10,r[i++]=56320|1023&s)}}var c="",u=16384;for(a=0;a<i;a+=u)c+=String.fromCharCode.apply(String,r.slice(a,a+u<=i?a+u:i));return c}(t))}function i(t,e){const n=JSON.parse(t);return n?"create"===e?function(t){const e=t.clientExtensionResults,n=f(t.response.authenticatorData).buffer,r=f(t.response.publicKey||"").buffer,a=t.response.publicKeyAlgorithm,i=t.response.transports,s={authenticatorAttachment:t.authenticatorAttachment||null,id:t.id,rawId:f(t.rawId).buffer,response:{attestationObject:f(t.response.attestationObject).buffer,clientDataJSON:f(t.response.clientDataJSON).buffer,getAuthenticatorData:()=>n,getPublicKey:()=>r,getPublicKeyAlgorithm:()=>a,getTransports:()=>i},type:"public-key",getClientExtensionResults:()=>e,toJSON:function(){return o(this)}};return Object.setPrototypeOf(s,PublicKeyCredential.prototype),Object.setPrototypeOf(s.response,AuthenticatorAttestationResponse.prototype),s}(n):function(t){const e=t.clientExtensionResults,n={authenticatorAttachment:t.authenticatorAttachment||null,id:t.id,rawId:f(t.rawId).buffer,response:{authenticatorData:f(t.response.authenticatorData).buffer,clientDataJSON:f(t.response.clientDataJSON).buffer,signature:f(t.response.signature).buffer,userHandle:t.response.userHandle?f(t.response.userHandle).buffer:null},type:"public-key",getClientExtensionResults:()=>e,toJSON:function(){return o(this)}};return Object.setPrototypeOf(n,PublicKeyCredential.prototype),Object.setPrototypeOf(n.response,AuthenticatorAssertionResponse.prototype),n}(n):n}function o(t){const e=t.getClientExtensionResults(),n=t.response,r=t.authenticatorAttachment;if(n instanceof AuthenticatorAttestationResponse){const a=n.getPublicKey(),i=n.getAuthenticatorData(),o=n.getTransports(),s=n.getPublicKeyAlgorithm();return{id:t.id,rawId:p(t.rawId),response:{clientDataJSON:p(n.clientDataJSON),authenticatorData:p(i),transports:o,publicKey:a?p(a):void 0,publicKeyAlgorithm:s,attestationObject:p(n.attestationObject)},authenticatorAttachment:r||void 0,clientExtensionResults:e,type:"public-key"}}if(n instanceof AuthenticatorAssertionResponse){return{id:t.id,rawId:p(t.rawId),response:{clientDataJSON:p(n.clientDataJSON),authenticatorData:p(n.authenticatorData),signature:p(n.signature),userHandle:n.userHandle?p(n.userHandle):void 0},authenticatorAttachment:r||void 0,clientExtensionResults:e,type:"public-key"}}throw new Error("Unknown credential type")}function s(t){return Object.prototype.toString.call(t).match(/^\[object\s(.*)\]$/)[1]}function c(t){return"ArrayBuffer"===s(t)}function u(t){return"Uint8Array"===s(t)}function l(t){return a(t).replace(/=+$/g,"").replace(/\//g,"_").replace(/\+/g,"-")}function f(t){if(!t)return new Uint8Array;let e=t.replace(/_/g,"/").replace(/-/g,"+");for(;e.length%4;)e+="=";return r(e)}function p(t){if(c(t))return l(new Uint8Array(t));if(u(t))return l(t);throw new Error("Unknown or invalid data type "+t)}let d,b=new Promise((t=>{d=t}));async function h(e,n){await b;const r=new CustomEvent(t,{detail:{type:"keeper-webauthn-message-request",cmd:e,data:n}});window.dispatchEvent(r)}window.addEventListener(t,(async e=>{if(!function(e){return e instanceof CustomEvent&&e.type===t}(e))return;const n=e.detail;if("keeper-webauthn-cs-ready"===n.type)return d();if("keeper-webauthn-message-response"===n.type){switch(n.cmd){case"webauthn-create-response":if(y){const t=i(n.data,"create");y(t)}break;case"webauthn-get-response":if(y){const t=i(n.data,"get");y(t)}break;case"webauthn-timed-out":w&&w(new DOMException("The operation timed out","NotAllowedError"))}y=null,w=null}}));let y=null,w=null;const g=CredentialsContainer.prototype.create.bind(navigator.credentials),A=CredentialsContainer.prototype.get.bind(navigator.credentials);!function(t,e){const n={init:function(){t.create=this.create,t.get=this.get,PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable=async()=>!0},create:async function(t){if(null==t||!t.publicKey)return g(t);const e=t.signal,n=await new Promise(((e,n)=>{y=e,w=n,delete t.signal,h("webauthn-create-request",t)}));if(!n){t.signal=e;return await g(t)}return n},get:async function(t){if(null==t||!t.publicKey)return A(t);const e=t.signal,n=await new Promise(((e,n)=>{y=e,w=n,delete t.signal,h("webauthn-get-request",t)}));if(!n){t.signal=e;return await A(t)}return n}};t&&e&&n.init()}(window.navigator.credentials,window.PublicKeyCredential)})();